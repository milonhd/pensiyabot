import logging
import time
from aiogram import Router, F, types
from aiogram.filters import Command
from aiogram.fsm.context import FSMContext
from aiogram.enums import ChatType
from aiogram.types import FSInputFile, InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.utils.keyboard import ReplyKeyboardBuilder

from config import ADMIN_ID, GROUP_IDS, bot
from database.operations import (
    get_user_access, set_user_access, save_user,
    get_all_active_users, get_all_users
)
from utils.keyboards import (
    main_keyboard, materials_keyboard,
    get_self_years_keyboard, get_year_buttons
)

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–≥–µ—Ä–∞
logger = logging.getLogger(__name__)

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ä–æ—É—Ç–µ—Ä–∞
router = Router()

@router.message(Command("start"), F.chat.type == ChatType.PRIVATE)
async def cmd_start(message: types.Message):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /start"""
    await save_user(message.from_user)
    user = message.from_user
    name = user.first_name or "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å"

    # –°–æ–∑–¥–∞–µ–º –æ—Å–Ω–æ–≤–Ω—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
    main_kb = ReplyKeyboardBuilder()
    main_kb.button(text="üìÑ –ü—É–±–ª–∏—á–Ω–∞—è –æ—Ñ–µ—Ä—Ç–∞")
    main_kb.button(text="üìû –ü–æ–¥–¥–µ—Ä–∂–∫–∞")
    
    if message.from_user.id == ADMIN_ID:
        main_kb.button(text="üì¢ –†–∞—Å—Å—ã–ª–∫–∞")
    
    main_kb.adjust(2)  # 2 –∫–Ω–æ–ø–∫–∏ –≤ —Ä—è–¥
    
    if message.from_user.id == ADMIN_ID:
        await message.answer(
            "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, –ê–¥–º–∏–Ω! –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /help –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –∫–æ–º–∞–Ω–¥.",
            reply_markup=main_kb.as_markup(resize_keyboard=True, one_time_keyboard=False)
        )
    else:
        expire_time, _ = await get_user_access(message.from_user.id)
        if expire_time and expire_time > time.time():
            await message.answer(
                f"üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {name}! –£ –≤–∞—Å —É–∂–µ –µ—Å—Ç—å –¥–æ—Å—Ç—É–ø.", 
                reply_markup=main_kb.as_markup(resize_keyboard=True, one_time_keyboard=False)
            )
        else:
            welcome_text = (
                f"üëã *–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {name}, –≤ –±–æ—Ç ¬´–°–í–û–Ø –ü–ï–ù–°–ò–Ø¬ª* ‚Äì —Ç–≤–æ–π –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫ –Ω–∞ –ø—É—Ç–∏ –∫ –¥–æ—Å—Ç–æ–π–Ω–æ–π –ø–µ–Ω—Å–∏–∏!\n"
                "–ó–¥–µ—Å—å —Ç—ã –Ω–∞–π–¥—ë—à—å –≤—Å—ë, —á—Ç–æ–±—ã –ø–æ–Ω–∏–º–∞—Ç—å –Ω–∞ –∫–∞–∫—É—é –ø–µ–Ω—Å–∏—é —Ç—ã –º–æ–∂–µ—à—å —Ä–∞—Å—Å—á–∏—Ç—ã–≤–∞—Ç—å, –∫–∞–∫ –µ—ë —É–≤–µ–ª–∏—á–∏—Ç—å –∏ –∫–∞–∫–∏–µ –≤—ã–ø–ª–∞—Ç—ã —Ç–µ–±–µ –ø–æ–ª–æ–∂–µ–Ω—ã –∏–º–µ–Ω–Ω–æ –≤ —Ç–≤–æ–µ–π —Å–∏—Ç—É–∞—Ü–∏–∏. "
                "–ü–æ–ª—É—á–∏—à—å –∞–ª–≥–æ—Ä–∏—Ç–º —Ä–∞—Å—á–µ—Ç–∞ –ø–µ–Ω—Å–∏–∏ –ø—Ä–∏–º–µ–Ω–∏—Ç–µ–ª—å–Ω—ã–π –∫ —Ç–≤–æ–µ–π —Å–∏—Ç—É–∞—Ü–∏–∏.\n\n"

                "üëâ *–í–Ω—É—Ç—Ä–∏ —É–∂–µ –¥–æ—Å—Ç—É–ø–Ω–æ:*\n"
                "1Ô∏è‚É£ –†–∞–∑–±–æ—Ä—ã –ø–µ–Ω—Å–∏–π –≤ –ö–∞–∑–∞—Ö—Å—Ç–∞–Ω–µ: –∫—Ç–æ, –∫–æ–≥–¥–∞ –∏ —Å–∫–æ–ª—å–∫–æ –º–æ–∂–µ—Ç –ø–æ–ª—É—á–∏—Ç—å\n"
                "2Ô∏è‚É£ –î–æ—Å—Ç—É–ø –∫ –∑–∞–∫—Ä—ã—Ç—ã–º –º–∞—Ç–µ—Ä–∏–∞–ª–∞–º: —Ç–µ–∫—Å—Ç, –≤–∏–¥–µ–æ, —Ñ–æ—Ç–æ ‚Äî –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —Ç–∞—Ä–∏—Ñ–∞\n\n"

                "üí∞ *–£—Ä–æ–≤–Ω–∏:*\n"
                "*–°–ê–ú–û–°–¢–û–Ø–¢–ï–õ–¨–ù–´–ô* ‚Äî 10 000 —Ç–≥\n"
                "*–ë–ê–ó–û–í–´–ô* ‚Äî 50 000 —Ç–≥\n"
                "*–ü–†–û* ‚Äî 250 000 —Ç–≥\n\n"

                "–¢—ã –º–æ–∂–µ—à—å –æ–ø–ª–∞—Ç–∏—Ç—å –ø—Ä—è–º–æ –∑–¥–µ—Å—å –∏ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —á–µ–∫ –æ–ø–ª–∞—Ç—ã. –ü–æ—Å–ª–µ —ç—Ç–æ–≥–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –∞–∫—Ç–∏–≤–∏—Ä—É–µ—Ç —Ç–µ–±–µ –¥–æ—Å—Ç—É–ø, –∏ –ø–æ—è–≤–∏—Ç—Å—è –∫–Ω–æ–ø–∫–∞ *–ü–û–õ–£–ß–ò–¢–¨ –ú–ê–¢–ï–†–ò–ê–õ–´*.\n\n"

                "–¢—ã –Ω–µ –æ–¥–∏–Ω ‚Äî –¥–∞–≤–∞–π —Ä–∞–∑–±–∏—Ä–∞—Ç—å—Å—è –≤–º–µ—Å—Ç–µ!\n"
            )
            await message.answer(
                welcome_text, 
                parse_mode="Markdown", 
                reply_markup=main_kb.as_markup(resize_keyboard=True, one_time_keyboard=False)
            )
            await message.answer(
                "üëá –í—ã–±–µ—Ä–∏—Ç–µ –∂–µ–ª–∞–µ–º—ã–π —É—Ä–æ–≤–µ–Ω—å:",
                reply_markup=main_keyboard  # —ç—Ç–æ InlineKeyboardMarkup
            )

@router.message(F.text == "üìÑ –ü—É–±–ª–∏—á–Ω–∞—è –æ—Ñ–µ—Ä—Ç–∞", F.chat.type == ChatType.PRIVATE)
async def handle_offer_button(message: types.Message):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ –ü—É–±–ª–∏—á–Ω–∞—è –æ—Ñ–µ—Ä—Ç–∞"""
    pdf_path = "oferta.pdf"
    try:
        document = FSInputFile(pdf_path)
        await message.answer_document(document)
    except Exception as e:
        await message.answer("‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ñ–∞–π–ª–∞: " + str(e))

@router.message(F.text == "üìû –ü–æ–¥–¥–µ—Ä–∂–∫–∞", F.chat.type == ChatType.PRIVATE)
async def handle_support_button(message: types.Message):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ –ü–æ–¥–¥–µ—Ä–∂–∫–∞"""
    support_msg = """
üìû <b>–°–ª—É–∂–±–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∏</b>

–ü–æ –≤—Å–µ–º –≤–æ–ø—Ä–æ—Å–∞–º –æ–±—Ä–∞—â–∞–π—Ç–µ—Å—å:
üëâ WhatsApp: <a href="https://wa.me/77754850900">+7 775 485 09 00</a>
‚è∞ –ß–∞—Å—ã —Ä–∞–±–æ—Ç—ã: –ü–Ω-–ü—Ç, 10:00-22:00
    """
    await message.answer(support_msg, parse_mode="HTML")

@router.callback_query(lambda c: c.data == "get_materials")
async def handle_get_materials(call: types.CallbackQuery):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ –ü–æ–ª—É—á–∏—Ç—å –º–∞—Ç–µ—Ä–∏–∞–ª—ã"""
    # –î–µ–∞–∫—Ç–∏–≤–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫—É —Å—Ä–∞–∑—É –ø–æ—Å–ª–µ –Ω–∞–∂–∞—Ç–∏—è
    await call.answer()
    await call.message.edit_reply_markup(
        reply_markup=InlineKeyboardMarkup(
            inline_keyboard=[
                [InlineKeyboardButton(
                    text="‚úÖ –ú–∞—Ç–µ—Ä–∏–∞–ª—ã –ø–æ–ª—É—á–µ–Ω—ã", 
                    callback_data="used_link"
                )]
            ]
        )
    )
    
    user_id = call.from_user.id
    expire_time, tariff = await get_user_access(user_id)
    
    if not expire_time or expire_time < time.time():
        return await call.message.answer("‚ùå –£ –≤–∞—Å –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞.")

    # –°–æ–ø–æ—Å—Ç–∞–≤–ª–µ–Ω–∏–µ —Ç–∞—Ä–∏—Ñ–æ–≤ –∏ ID –≥—Ä—É–ø–ø
    tariff_chat_map = {
        "basic": GROUP_IDS[0],
        "2025": GROUP_IDS[1],
        "2026": GROUP_IDS[2],
        "2027": GROUP_IDS[3],
        "2028": GROUP_IDS[4], 
        "2029": GROUP_IDS[5],
        "2030": GROUP_IDS[6],
        "2031": GROUP_IDS[7]
    }

    chat_id = tariff_chat_map.get(tariff)
    if not chat_id:
        return await call.message.answer("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –∫–∞–Ω–∞–ª –ø–æ –≤–∞—à–µ–º—É —Ç–∞—Ä–∏—Ñ—É.")

    try:
        # –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—É—é —Å—Å—ã–ª–∫—É (15 —Å–µ–∫—É–Ω–¥)
        invite = await bot.create_chat_invite_link(
            chat_id=chat_id,
            member_limit=1,
            expire_date=int(time.time()) + 15,
            creates_join_request=False
        )
    
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–æ —Å—Å—ã–ª–∫–æ–π
        msg = await call.message.answer(
            f"üîê –í–∞—à–∞ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞ (–∏—Å—á–µ–∑–Ω–µ—Ç —Å–ø—É—Å—Ç—è 15 —Å–µ–∫—É–Ω–¥):\n{invite.invite_link}"
        )
        
        # –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —á–µ—Ä–µ–∑ 15 —Å–µ–∫—É–Ω–¥
        await asyncio.sleep(15)
        try:
            await msg.delete()
        except Exception as e:
            logging.error(f"–ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ: {e}")
        
    except Exception as e:
        logging.error(f"–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Å—Å—ã–ª–∫–∏ –¥–ª—è —á–∞—Ç–∞ {chat_id}: {e}")
        await call.message.answer("‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Å—Å—ã–ª–∫–∏.")

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –Ω–µ–∞–∫—Ç–∏–≤–Ω–æ–π –∫–Ω–æ–ø–∫–∏
@router.callback_query(F.data == "used_link")
async def handle_used_link(call: types.CallbackQuery):
    await call.answer("–í—ã —É–∂–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª–∏ —ç—Ç—É —Å—Å—ã–ª–∫—É", show_alert=True)

@router.callback_query(lambda c: c.data.startswith("year_"))
async def handle_year_selection(call: types.CallbackQuery):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ –≥–æ–¥–∞ –¥–ª—è —É—Ä–æ–≤–Ω—è –°–ê–ú–û–°–¢–û–Ø–¢–ï–õ–¨–ù–´–ô"""
    year = call.data.split("_")[1]
    
    text = """
üîπ –£—Ä–æ–≤–µ–Ω—å –°–ê–ú–û–°–¢–û–Ø–¢–ï–õ–¨–ù–´–ô ‚Äî —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å —Å–≤–æ—é –±—É–¥—É—â—É—é –ø–µ–Ω—Å–∏—é –±–µ–∑ —Å–ª–æ–∂–Ω—ã—Ö —Ä–∞—Å—á—ë—Ç–æ–≤

üìå –ü–æ–¥—Ö–æ–¥–∏—Ç, –µ—Å–ª–∏:
‚Äì –Ω–µ –¥—Ä—É–∂–∏—Ç–µ —Å —Ñ–æ—Ä–º—É–ª–∞–º–∏, Excel, –Ω–µ –ø–æ–Ω–∏–º–∞–µ—Ç–µ –∞–ª–≥–æ—Ä–∏—Ç–º —Ä–∞—Å—á–µ—Ç–∞ –Ω–∞ —É—Ä–æ–≤–Ω–µ –≥–æ—Å–æ—Ä–≥–∞–Ω–æ–≤
‚Äì –ø—Ä–æ—Å—Ç–æ —Ö–æ—Ç–∏—Ç–µ –ø–æ–Ω—è—Ç—å, –ø–æ—á–µ–º—É —É –≤–∞—Å –±—É–¥–µ—Ç —Ç–∞–∫–∞—è –ø–µ–Ω—Å–∏—è
‚Äì —Ö–æ—Ç–∏—Ç–µ —É–∑–Ω–∞—Ç—å, —á—Ç–æ –≤–ª–∏—è–µ—Ç –Ω–∞ —Ä–∞–∑–º–µ—Ä –ø–µ–Ω—Å–∏–∏ –∏ –º–æ–∂–Ω–æ –ª–∏ —á—Ç–æ-—Ç–æ —É–ª—É—á—à–∏—Ç—å

üìö –í—ã –ø–æ–ª—É—á–∏—Ç–µ:
‚úîÔ∏è –ì–æ—Ç–æ–≤—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã –≤ –ø–æ–Ω—è—Ç–Ω–æ–π —Ñ–æ—Ä–º–µ ‚Äî —Ç–∞–±–ª–∏—Ü—ã –∏ –≤–∏–¥–µ–æ
‚úîÔ∏è –û–±—ä—è—Å–Ω–µ–Ω–∏–µ –Ω–∞ –ø—Ä–∏–º–µ—Ä–∞—Ö, –±–µ–∑ —Å–ª–æ–∂–Ω–æ—Å—Ç–µ–π
‚úîÔ∏è –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏: —á—Ç–æ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å, –≥–¥–µ –≤–∑—è—Ç—å –¥–∞–Ω–Ω—ã–µ, –∫–∞–∫ –Ω–µ —É–ø—É—Å—Ç–∏—Ç—å –≤–∞–∂–Ω–æ–µ
‚úîÔ∏è –ö–æ–Ω–µ—á–Ω—ã–π –ø—Ä–æ–¥—É–∫—Ç —Å —Ä–∞—Å—á–µ—Ç–æ–º –≤–∞—à–µ–π –ø–µ–Ω—Å–∏–∏

‚è∞ –î–æ—Å—Ç—É–ø: 7 –¥–Ω–µ–π
üí¨ –í–æ–ø—Ä–æ—Å—ã ‚Äî –≤ –æ–±—â–µ–º —á–∞—Ç–µ –º–æ–∂–Ω–æ –∑–∞–¥–∞–≤–∞—Ç—å –≤–æ–ø—Ä–æ—Å—ã –ø–æ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—é —Ç–∞–±–ª–∏—Ü—ã
üí≥ –°—Ç–æ–∏–º–æ—Å—Ç—å: 10 000 ‚Ç∏

üëá –ù–∞–∂–º–∏—Ç–µ ¬´‚úÖ –û–ø–ª–∞—Ç–∏—Ç—å¬ª, —á—Ç–æ–±—ã –ø–µ—Ä–µ–π—Ç–∏ –∫ —Ä–µ–∫–≤–∏–∑–∏—Ç–∞–º.
"""
    
    await call.message.answer(text, reply_markup=get_year_buttons(year))

@router.callback_query(F.data == "self")
async def handle_self_level(call: types.CallbackQuery):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ —É—Ä–æ–≤–Ω—è –°–ê–ú–û–°–¢–û–Ø–¢–ï–õ–¨–ù–´–ô"""
    await call.message.answer("üìÖ –í—ã–±–µ—Ä–∏—Ç–µ –≥–æ–¥ –≤–∞—à–µ–≥–æ –≤—ã—Ö–æ–¥–∞ –Ω–∞ –ø–µ–Ω—Å–∏—é:", 
                            reply_markup=get_self_years_keyboard())

@router.callback_query(F.data == "basic")
async def handle_basic_level(call: types.CallbackQuery):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ —É—Ä–æ–≤–Ω—è –ë–ê–ó–û–í–´–ô"""
    user_id = call.from_user.id
    await set_user_access(user_id, None, "basic")  
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="‚úÖ –û–ø–ª–∞—Ç–∏—Ç—å", url="https://pay.kaspi.kz/pay/vx2s6z0c")],
        [InlineKeyboardButton(text="üìÑ –û—Ç–ø—Ä–∞–≤–∏—Ç—å —á–µ–∫", callback_data="send_screenshot_basic")]
    ])
    await call.message.answer(
    """
üî∏ –£—Ä–æ–≤–µ–Ω—å –ë–ê–ó–û–í–´–ô ‚Äî –º–∏–Ω–∏-–∫—É—Ä—Å –¥–ª—è —Ç–µ—Ö, –∫—Ç–æ —Ö–æ—á–µ—Ç –ø–æ–Ω–∏–º–∞—Ç—å —Ä–∞—Å—á—ë—Ç –ø–µ–Ω—Å–∏–∏ –∏ –ø–æ–º–æ–≥–∞—Ç—å –¥—Ä—É–≥–∏–º

üìö –í—ã –ø–æ–ª—É—á–∏—Ç–µ:
‚úîÔ∏è –ì–æ—Ç–æ–≤—ã–π –∞–ª–≥–æ—Ä–∏—Ç–º —Ä–∞—Å—á—ë—Ç–∞ –ø–µ–Ω—Å–∏–∏ ‚Äî –ø–æ—à–∞–≥–æ–≤–æ, –±–µ–∑ —Å–ª–æ–∂–Ω—ã—Ö —Ñ–æ—Ä–º—É–ª
‚úîÔ∏è –ü—Ä–∏–º–µ—Ä—ã –∏ —à–∞–±–ª–æ–Ω—ã ‚Äî –∫–∞–∫ —Å—á–∏—Ç–∞—Ç—å, –≥–¥–µ –±—Ä–∞—Ç—å –¥–∞–Ω–Ω—ã–µ
‚úîÔ∏è –í–∏–¥–µ–æ + —Ç–µ–∫—Å—Ç–æ–≤—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã ‚Äî –≤—Å—ë –ø–æ –¥–µ–ª—É
‚úîÔ∏è –û—Ç–≤–µ—Ç—ã –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã –ø–æ —Ä–∞—Å—á—ë—Ç—É (–µ—Å–ª–∏ —á—Ç–æ-—Ç–æ –Ω–µ–ø–æ–Ω—è—Ç–Ω–æ ‚Äî —Ä–∞–∑–±–µ—Ä—ë–º)

üß† –ü–æ–¥—Ö–æ–¥–∏—Ç —Ç–µ–º, –∫—Ç–æ:
‚Äì —Ö–æ—á–µ—Ç —Ä–∞–∑–±–∏—Ä–∞—Ç—å—Å—è –≤ —Ç–µ–º–µ –¥–ª—è —Å–µ–±—è –∏ –±–ª–∏–∑–∫–∏—Ö
‚Äì –ø–ª–∞–Ω–∏—Ä—É–µ—Ç –ø–æ–º–æ–≥–∞—Ç—å –¥—Ä—É–≥–∏–º (–∫–∞–∫ –∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç –∏–ª–∏ –ø–æ–º–æ—â–Ω–∏–∫)
‚Äì –Ω–µ —Ö–æ—á–µ—Ç —Ç—Ä–∞—Ç–∏—Ç—å –≤—Ä–µ–º—è –Ω–∞ —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ–µ –∏–∑—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö –Ω—é–∞–Ω—Å–æ–≤

‚è∞ –î–æ—Å—Ç—É–ø: 30 –¥–Ω–µ–π
üí¨ –ü–æ–¥–¥–µ—Ä–∂–∫–∞: –≤–æ–ø—Ä–æ—Å-–æ—Ç–≤–µ—Ç –≤ –æ–±—â–µ–º —á–∞—Ç–µ
üí≥ –°—Ç–æ–∏–º–æ—Å—Ç—å: 50 000 ‚Ç∏

üëá –ù–∞–∂–º–∏—Ç–µ ¬´‚úÖ –û–ø–ª–∞—Ç–∏—Ç—å¬ª, —á—Ç–æ–±—ã –ø–µ—Ä–µ–π—Ç–∏ –∫ —Ä–µ–∫–≤–∏–∑–∏—Ç–∞–º.
    """,
    reply_markup=keyboard)

@router.callback_query(F.data == "pro")
async def handle_pro_level(call: types.CallbackQuery):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ —É—Ä–æ–≤–Ω—è –ü–†–û"""
    user_id = call.from_user.id
    await set_user_access(user_id, None, "pro")  # –í—Ä–µ–º–µ–Ω–Ω–æ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –≤—ã–±–æ—Ä
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="‚úÖ –û–ø–ª–∞—Ç–∏—Ç—å", url="https://pay.kaspi.kz/pay/vx2s6z0c")],
        [InlineKeyboardButton(text="üìÑ –û—Ç–ø—Ä–∞–≤–∏—Ç—å —á–µ–∫", callback_data="send_screenshot_pro")]
    ])
    await call.message.answer("‚ùå –í—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ", reply_markup=keyboard)

@router.callback_query(F.data.startswith("send_screenshot_"))
async def handle_screenshot_request(call: types.CallbackQuery):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É –û—Ç–ø—Ä–∞–≤–∏—Ç—å —á–µ–∫"""
    user_id = call.from_user.id
    expire_time, current_tariff = await get_user_access(user_id)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å—Ç—å –ª–∏ –∞–∫—Ç–∏–≤–Ω—ã–π –¥–æ—Å—Ç—É–ø
    if expire_time and expire_time > time.time():
        await call.answer("‚ùó –£ –≤–∞—Å —É–∂–µ –µ—Å—Ç—å –∞–∫—Ç–∏–≤–Ω—ã–π –¥–æ—Å—Ç—É–ø!", show_alert=True)
        return
    
    year_or_tariff = call.data.split("_")[2]
    await set_user_access(user_id, None, year_or_tariff)
    await call.message.answer(
        f"üìÑ –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ PDF-—Ñ–∞–π–ª —Ñ–∏—Å–∫–∞–ª—å–Ω–æ–≥–æ —á–µ–∫–∞ –∏–∑ Kaspi!\n\n"
        "üìå –ö–∞–∫ –ø–æ–ª—É—á–∏—Ç—å —á–µ–∫:\n"
        "1. –ü–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã –≤ Kaspi –Ω–∞–∂–º–∏—Ç–µ ¬´–ü–æ–∫–∞–∑–∞—Ç—å —á–µ–∫ –æ–± –æ–ø–ª–∞—Ç–µ¬ª\n"
        "2. –ù–∞–∂–º–∏—Ç–µ ¬´–ü–æ–¥–µ–ª–∏—Ç—å—Å—è¬ª\n"
        "3. –û—Ç–ø—Ä–∞–≤—å—Ç–µ —á–µ–∫ –≤ —ç—Ç–æ—Ç —á–∞—Ç\n\n"
    )

@router.message(F.new_chat_members)
async def remove_join_message(message: types.Message):
    """–£–¥–∞–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π –æ –≤—Ö–æ–¥–µ –Ω–æ–≤—ã—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤"""
    try:
        await message.delete()
    except Exception as e:
        logging.warning(f"–ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å join-—Å–æ–æ–±—â–µ–Ω–∏–µ: {e}")

@router.message(F.left_chat_member)
async def remove_leave_message(message: types.Message):
    """–£–¥–∞–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π –æ –≤—ã—Ö–æ–¥–µ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤"""
    try:
        await message.delete()
    except Exception as e:
        logging.warning(f"–ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å leave-—Å–æ–æ–±—â–µ–Ω–∏–µ: {e}")

async def show_main_menu(message: types.Message, text: str = None):
    """–ü–æ–∫–∞–∑ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é"""
    main_kb = ReplyKeyboardBuilder()
    main_kb.button(text="üìÑ –ü—É–±–ª–∏—á–Ω–∞—è –æ—Ñ–µ—Ä—Ç–∞")
    main_kb.button(text="üìû –ü–æ–¥–¥–µ—Ä–∂–∫–∞")
    
    if message.from_user.id == ADMIN_ID:
        main_kb.button(text="üì¢ –†–∞—Å—Å—ã–ª–∫–∞")
    
    main_kb.adjust(2)
    
    if text:
        await message.answer(text, reply_markup=main_kb.as_markup(resize_keyboard=True))
    else:
        await message.answer("üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:", reply_markup=main_kb.as_markup(resize_keyboard=True))
